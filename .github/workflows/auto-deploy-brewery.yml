name: Auto-Deploy Approved Breweries

on:
  issues:
    types: [labeled]

jobs:
  deploy-to-vps:
    if: github.event.label.name == 'approved'
    runs-on: ubuntu-latest

    permissions:
      issues: write
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Process with Claude
        uses: anthropics/claude-code-action@v1
        id: claude
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          prompt: |
            Extract the brewery data from issue #${{ github.event.issue.number }} and add it to breweries.json.

            Steps:
            1. Read the issue body and extract all brewery fields
            2. Generate a new UUID v4 for the brewery ID
            3. Read breweries.json
            4. Check for duplicates (same name + city + state)
            5. If not duplicate, add the new brewery to the JSON array
            6. Write the updated breweries.json
            7. Create a commit with message: "Add brewery from issue #${{ github.event.issue.number }}: [brewery name]"

            IMPORTANT: After successful commit, create a file called deployment-info.json with:
            {
              "brewery_name": "exact brewery name",
              "brewery_id": "the UUID you generated",
              "brewery_type": "the type",
              "city": "city",
              "state": "state"
            }

            This file will be used to generate the success comment.

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Push changes
        run: |
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            cd /opt/badm554-api
            git pull origin main
            docker-compose down
            docker-compose up -d --build
            echo "Deployment complete!"

      - name: Comment on issue
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');

            // Try to read deployment info from Claude
            let breweryName = 'your brewery';
            let breweryId = '';
            let breweryType = '';
            let city = '';
            let state = '';

            try {
              if (fs.existsSync('deployment-info.json')) {
                const info = JSON.parse(fs.readFileSync('deployment-info.json', 'utf8'));
                breweryName = info.brewery_name || breweryName;
                breweryId = info.brewery_id || '';
                breweryType = info.brewery_type || '';
                city = info.city || '';
                state = info.state || '';
              }
            } catch (e) {
              console.log('Could not read deployment info, extracting from issue body');
              // Fallback to parsing issue body
              const issueBody = context.payload.issue.body;
              const nameMatch = issueBody.match(/\*\*Brewery Name:\*\*\s*(.+)/);
              breweryName = nameMatch ? nameMatch[1].trim() : breweryName;
            }

            const searchQuery = encodeURIComponent(breweryName);
            const apiBase = 'http://178.156.206.171:8000';

            let body = `## üéâ Brewery Successfully Added & Deployed!\n\n`;
            body += `Your brewery has been added to the database and is now live on the API.\n\n`;

            body += `### üìä Brewery Details\n`;
            body += `- **Name:** ${breweryName}\n`;
            if (breweryType) body += `- **Type:** ${breweryType}\n`;
            if (city && state) body += `- **Location:** ${city}, ${state}\n`;
            if (breweryId) body += `- **Database ID:** \`${breweryId}\`\n`;
            body += `\n`;

            body += `### üîó Access Your Brewery\n`;
            body += `Your brewery is now available through multiple endpoints:\n\n`;
            body += `**Search by name:**\n`;
            body += `\`\`\`\n${apiBase}/breweries/search?query=${searchQuery}\n\`\`\`\n\n`;

            if (breweryId) {
              body += `**Direct access by ID:**\n`;
              body += `\`\`\`\n${apiBase}/breweries/${breweryId}\n\`\`\`\n\n`;
            }

            if (city) {
              body += `**All breweries in ${city}:**\n`;
              body += `\`\`\`\n${apiBase}/breweries?by_city=${encodeURIComponent(city)}\n\`\`\`\n\n`;
            }

            body += `### üìö Try It Out\n`;
            body += `- **Interactive API Docs:** ${apiBase}/docs\n`;
            body += `- **Test in browser:** Click any link above\n`;
            body += `- **Use in your code:** See [README.md](../blob/main/README.md) for examples\n\n`;

            body += `### ‚úÖ What Happened\n`;
            body += `1. ‚úì Your submission was validated\n`;
            body += `2. ‚úì Instructor approved your brewery\n`;
            body += `3. ‚úì Data was added to \`breweries.json\`\n`;
            body += `4. ‚úì Changes were committed to GitHub\n`;
            body += `5. ‚úì API was deployed to production server\n`;
            body += `6. ‚úì Your brewery is now available to all students!\n\n`;

            body += `### üåü Next Steps\n`;
            body += `- Try querying the API with the links above\n`;
            body += `- Share your brewery with classmates\n`;
            body += `- Consider submitting another brewery\n`;
            body += `- This data may be contributed to the official [Open Brewery DB](https://www.openbrewerydb.org/)\n\n`;

            body += `**Thank you for contributing to open data!** üç∫\n\n`;
            body += `---\n`;
            body += `*This issue will now be closed. If you need to make corrections, please open a new issue using the "Update Brewery Information" template.*`;

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });

            // Close the issue
            await github.rest.issues.update({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'closed'
            });
