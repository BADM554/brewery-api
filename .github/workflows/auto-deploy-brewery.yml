name: Auto-Deploy Approved Breweries

on:
  issues:
    types: [labeled]

jobs:
  deploy-to-vps:
    if: github.event.label.name == 'approved'
    runs-on: ubuntu-latest

    permissions:
      issues: write
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Process with Claude
        uses: anthropics/claude-code-action@v1
        id: claude
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          claude_args: '--allowed-tools "Read,Write,Edit,Bash(git add:*),Bash(git commit:*),Bash(gh issue view:*),Bash(gh api:*),Bash(python*:*)"'
          prompt: |
            Extract the brewery data from issue #${{ github.event.issue.number }} and add it to breweries.json.

            Steps:
            1. Read the issue body and extract all brewery fields
            2. Generate a new UUID v4 for the brewery ID
            3. Read breweries.json
            4. Check for duplicates (same name + city + state)
            5. If not duplicate, add the new brewery to the JSON array
            6. Write the updated breweries.json
            7. Create a commit with message: "Add brewery from issue #${{ github.event.issue.number }}: [brewery name]"

            After successful commit, respond with:
            - Brewery name
            - Generated ID
            - Confirmation message

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Push changes
        run: |
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            cd /opt/badm554-api
            git pull origin main
            docker-compose down
            docker-compose up -d --build
            echo "Deployment complete!"

      - name: Comment on issue
        uses: actions/github-script@v7
        with:
          script: |
            // Extract brewery name from issue body
            const issueBody = context.payload.issue.body;
            const nameMatch = issueBody.match(/\*\*Brewery Name:\*\*\s*\n(.+)/);
            const breweryName = nameMatch ? nameMatch[1].trim() : 'your brewery';
            const searchQuery = encodeURIComponent(breweryName);

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `‚úÖ **Brewery Added & Deployed!**

            Your brewery has been added to the database and deployed to the live API.

            üîó **Test it now:**
            - API Search: http://178.156.206.171:8000/breweries/search?query=${searchQuery}
            - View all: http://178.156.206.171:8000/docs

            The changes are live and available to all students! üéâ

            Thank you for contributing to open data! üç∫`
            });

            // Close the issue
            github.rest.issues.update({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'closed'
            });
